##parameters##
n.subjects <- 200
P <- .6 #probability
##############
pick.song <- function(songs, prime.song){ #function that generates the tempo for one subject
songs <- rnorm(1,120,15) #tempo in head without prime
prime.song <- 60 #primed tempo
noise <- (prime.song - rnorm(1,prime.song,10))
decision <- runif(1,0,1)
if(decision <= P){
return(prime.song + noise)}
else{
return(songs)}
}
subject = c(1:n.subjects)
tempo = c(rep(prime.song, each = n.subjects))
tempo.produced = sapply(1:n.subjects, pick.song)
preferred.tempo = data.frame(subject, tempo, tempo.produced)
plot(subject,tempo.produced)
hist(preferred.tempo)
hist(tempo.produced)
##parameters##
n.subjects <- 200
P <- .6 #probability
##############
pick.song <- function(songs, prime.song){ #function that generates the tempo for one subject
songs <- rnorm(1,120,15) #tempo in head without prime
prime.song <- 60 #primed tempo
noise <- (prime.song - rnorm(1,prime.song,10))
decision <- runif(1,0,1)
if(decision <= P){
return(prime.song + noise)}
else{
return(songs)}
}
subject = c(1:n.subjects)
tempo = c(rep(prime.song, each = n.subjects))
tempo.produced = sapply(1:n.subjects, pick.song)
preferred.tempo = data.frame(subject, tempo, tempo.produced)
hist(tempo.produced)
##parameters##
n.subjects <- 200
P <- .6 #probability
##############
pick.song <- function(songs, prime.song){ #function that generates the tempo for one subject
songs <- rnorm(1,120,15) #tempo in head without prime
prime.song <- 60 #primed tempo
noise <- (prime.song - rnorm(1,prime.song,10))
decision <- runif(1,0,1)
if(decision <= P){
return(prime.song + noise)}
else{
return(songs)}
}
subject = c(1:n.subjects)
tempo = c(rep(prime.song, each = n.subjects))
tempo.produced = sapply(1:n.subjects, pick.song)
preferred.tempo = data.frame(subject, tempo, tempo.produced)
hist(tempo.produced)
##parameters##
n.subjects <- 200
P <- .6 #probability
##############
pick.song <- function(songs, prime.song){ #function that generates the tempo for one subject
songs <- rnorm(1,120,15) #tempo in head without prime
prime.song <- 60 #primed tempo
noise <- (prime.song - rnorm(1,prime.song,10))
decision <- runif(1,0,1)
if(decision <= P){
return(prime.song + noise)}
else{
return(songs)}
}
subject = c(1:n.subjects)
tempo = c(rep(prime.song, each = n.subjects))
tempo.produced = sapply(1:n.subjects, pick.song)
preferred.tempo = data.frame(subject, tempo, tempo.produced)
hist(tempo.produced)
##parameters##
n.subjects <- 200
P <- .6 #probability
##############
pick.song <- function(songs, prime.song){ #function that generates the tempo for one subject
songs <- rnorm(1,120,15) #tempo in head without prime
prime.song <- 60 #primed tempo
noise <- (prime.song - rnorm(1,prime.song,10))
decision <- runif(1,0,1)
if(decision <= P){
return(prime.song + noise)}
else{
return(songs)}
}
subject = c(1:n.subjects)
tempo = c(rep(prime.song, each = n.subjects))
tempo.produced = sapply(1:n.subjects, pick.song)
preferred.tempo = data.frame(subject, tempo, tempo.produced)
hist(tempo.produced)
##parameters##
n.subjects <- 200
P <- .6 #probability
##############
pick.song <- function(songs, prime.song){ #function that generates the tempo for one subject
songs <- rnorm(1,120,15) #tempo in head without prime
prime.song <- 60 #primed tempo
noise <- (prime.song - rnorm(1,prime.song,10))
decision <- runif(1,0,1)
if(decision <= P){
return(prime.song + noise)}
else{
return(songs)}
}
subject = c(1:n.subjects)
tempo = c(rep(prime.song, each = n.subjects))
tempo.produced = sapply(1:n.subjects, pick.song)
preferred.tempo = data.frame(subject, tempo, tempo.produced)
hist(tempo.produced)
##parameters##
n.subjects <- 200
P <- .6 #probability
##############
pick.song <- function(songs, prime.song){ #function that generates the tempo for one subject
songs <- rnorm(1,120,15) #tempo in head without prime
prime.song <- 60 #primed tempo
noise <- (prime.song - rnorm(1,prime.song,10))
decision <- runif(1,0,1)
if(decision <= P){
return(prime.song + noise)}
else{
return(songs)}
}
subject = c(1:n.subjects)
tempo = c(rep(prime.song, each = n.subjects))
tempo.produced = sapply(1:n.subjects, pick.song)
preferred.tempo = data.frame(subject, tempo, tempo.produced)
hist(tempo.produced)
##parameters##
n.subjects <- 200
P <- .6 #probability
##############
pick.song <- function(songs, prime.song){ #function that generates the tempo for one subject
songs <- rnorm(1,120,15) #tempo in head without prime
prime.song <- 60 #primed tempo
noise <- (prime.song - rnorm(1,prime.song,10))
decision <- runif(1,0,1)
if(decision <= P){
return(prime.song + noise)}
else{
return(songs)}
}
subject = c(1:n.subjects)
tempo = c(rep(prime.song, each = n.subjects))
tempo.produced = sapply(1:n.subjects, pick.song)
preferred.tempo = data.frame(subject, tempo, tempo.produced)
hist(tempo.produced)
seq(80:120, 10)
seq(80,120, 10)
seq(80,120, 10)
seq(60 ,120, 10)
sample(seq(60 ,120, 10))
sample(seq(60 ,120, 10))
sample((seq(60 ,120, 10)),1)
sample((seq(60 ,120, 10)),1)
##parameters##
n.subjects <- 500
P <- .6 #probability
##############
pick.song <- function(songs, prime.song){ #function that generates the tempo for one subject
songs <- rnorm(1,120,15) #tempo in head without prime
prime.song <- sample((seq(60 ,180, 10)),1) #primed tempo
noise <- (prime.song - rnorm(1,prime.song,10))
decision <- runif(1,0,1)
if(decision <= P){
return(prime.song + noise)}
else{
return(songs)}
}
subject = c(1:n.subjects)
tempo = c(rep(prime.song, each = n.subjects))
tempo.produced = sapply(1:n.subjects, pick.song)
preferred.tempo = data.frame(subject, tempo, tempo.produced)
View(preferred.tempo)
prime.song <- sample((seq(60 ,180, 10)),1) #primed tempo
##parameters##
n.subjects <- 500
P <- .6 #probability
##############
pick.song <- function(songs, prime.song){ #function that generates the tempo for one subject
songs <- rnorm(1,120,15) #tempo in head without prime
prime.song <- sample((seq(60 ,180, 10)),1) #primed tempo
noise <- (prime.song - rnorm(1,prime.song,10))
decision <- runif(1,0,1)
if(decision <= P){
return(prime.song + noise)}
else{
return(songs)}
}
subject = c(1:n.subjects)
tempo = c(rep(prime.song, each = n.subjects))
tempo.produced = sapply(1:n.subjects, pick.song)
preferred.tempo = data.frame(subject, tempo, tempo.produced)
hist(tempo.produced)
sample((seq(60 ,120, 10)),1)
tempo = c(rep(prime.song, each = n.subjects))
##parameters##
n.subjects <- 500
P <- .6 #probability
##############
pick.song <- function(songs, prime.song){ #function that generates the tempo for one subject
songs <- rnorm(1,120,15) #tempo in head without prime
prime.song <- sample((seq(60 ,180, 10)),1) #primed tempo
tempo = c(rep(prime.song, each = n.subjects))
noise <- (prime.song - rnorm(1,prime.song,10))
decision <- runif(1,0,1)
if(decision <= P){
return(prime.song + noise)}
else{
return(songs)}
}
tempo = mapply(1:n.subjects,prime.song)
##parameters##
n.subjects <- 500
P <- .6 #probability
##############
pick.song <- function(songs, prime.song){ #function that generates the tempo for one subject
songs <- rnorm(1,120,15) #tempo in head without prime
prime.song <- 140 #primed tempo
noise <- (prime.song - rnorm(1,prime.song,10))
decision <- runif(1,0,1)
if(decision <= P){
return(prime.song + noise)}
else{
return(songs)}
}
subject = c(1:n.subjects)
tempo = c(rep(prime.song, each = n.subjects))
tempo.produced = sapply(1:n.subjects, pick.song)
##parameters##
n.subjects <- 500
P <- .6 #probability
##############
pick.song <- function(songs, prime.song){ #function that generates the tempo for one subject
songs <- rnorm(1,120,15) #tempo in head without prime
prime.song <- 140 #primed tempo
noise <- (prime.song - rnorm(1,prime.song,10))
decision <- runif(1,0,1)
if(decision <= P){
return(prime.song + noise)}
else{
return(songs)}
}
##parameters##
n.subjects <- 500
P <- .6 #probability
##############
pick.song <- function(songs, prime.song){ #function that generates the tempo for one subject
songs <- rnorm(1,120,15) #tempo in head without prime
prime.song <- 140 #primed tempo
noise <- (prime.song - rnorm(1,prime.song,10))
decision <- runif(1,0,1)
if(decision <= P){
return(prime.song + noise)}
else{
return(songs)}
}
tempo = c(rep(prime.song, each = n.subjects))
prime.song <- 140 #primed tempo
##parameters##
n.subjects <- 500
P <- .6 #probability
##############
pick.song <- function(songs, prime.song){ #function that generates the tempo for one subject
songs <- rnorm(1,120,15) #tempo in head without prime
prime.song <- 140 #primed tempo
noise <- (prime.song - rnorm(1,prime.song,10))
decision <- runif(1,0,1)
if(decision <= P){
return(prime.song + noise)}
else{
return(songs)}
}
subject = c(1:n.subjects)
tempo = c(rep(prime.song, each = n.subjects))
tempo.produced = sapply(1:n.subjects, pick.song)
preferred.tempo = data.frame(subject, tempo, tempo.produced)
hist(tempo.produced)
dunif(0,1)
runif(0,1)
runif(0,1)
dunif(1,0,1)
dunif(1,0,1)
runif(1,0,1)
dunif(0,100)
runif(0,100)
runif(0,100)
runif(0,100)
dnorm(0,.0001)
dnorm(0,.0001)
dnorm(0,.0001)
dnorm(0,.0001)
dnorm(0,.0001)
?dnorm
##parameters##
n.subjects <- 200
P <- .6 #probability
##############
pick.song <- function(songs, prime.song){ #function that generates the tempo for one subject
songs <- rnorm(1,120,15) #tempo in head without prime
prime.song <- 140 #primed tempo
noise <- (prime.song - rnorm(1,prime.song,10))
decision <- runif(1,0,1)
if(decision <= P){
return(prime.song + noise)}
else{
return(songs)}
}
subject = c(1:n.subjects)
tempo = c(rep(prime.song, each = n.subjects))
tempo.produced = sapply(1:n.subjects, pick.song)
##parameters##
n.subjects <- 200
P <- .6 #probability
##############
pick.song <- function(songs, prime.song){ #function that generates the tempo for one subject
songs <- rnorm(1,120,15) #tempo in head without prime
prime.song <- 140 #primed tempo
noise <- (prime.song - rnorm(1,prime.song,10))
decision <- runif(1,0,1)
if(decision <= P){
return(prime.song + noise)}
else{
return(songs)}
}
subject = c(1:n.subjects)
tempo = c(rep(prime.song, each = n.subjects))
tempo.produced = sapply(1:n.subjects, pick.song)
##parameters##
n.subjects <- 200
P <- .6 #probability
##############
pick.song <- function(songs, prime.song){ #function that generates the tempo for one subject
songs <- rnorm(1,120,15) #tempo in head without prime
prime.song <- 140 #primed tempo
noise <- (prime.song - rnorm(1,prime.song,10))
decision <- runif(1,0,1)
if(decision <= P){
return(prime.song + noise)}
else{
return(songs)}
}
200
##parameters##
n.subjects <- 200
P <- .6 #probability
##############
pick.song <- function(songs, prime.song){ #function that generates the tempo for one subject
songs <- rnorm(1,120,15) #tempo in head without prime
prime.song <- 180 #primed tempo
noise <- (prime.song - rnorm(1,prime.song,10))
decision <- runif(1,0,1)
if(decision <= P){
return(prime.song + noise)}
else{
return(songs)}
}
subject = c(1:n.subjects)
tempo = c(rep(prime.song, each = n.subjects))
tempo.produced = sapply(1:n.subjects, pick.song)
preferred.tempo = data.frame(subject, tempo, tempo.produced)
hist(tempo.produced)
graph(subject,tempo.produced)
plot(subject,tempo.produced)
ggplot(preferred.tempo, aes(x=subject, y=tempo.produced))+
geom_point()
library(ggplot2)
ggplot(preferred.tempo, aes(x=subject, y=tempo.produced))+
geom_point()
ggplot(preferred.tempo, aes(x=subject, y=tempo.produced, color=tempo.produced))+
geom_point()
}
Subject = c(1:n.subjects)
Tempo = c(rep(prime.song, each = n.subjects))
Tempo.produced = sapply(1:n.subjects, pick.song)
preferred.tempo = data.frame(subject, tempo, tempo.produced)
library(ggplot2)
ggplot(preferred.tempo, aes(x=Subject, y=Tempo.produced, color=Tempo.produced))+
geom_point()
ggplot(preferred.tempo, aes(x=Subject, y=Tempo.produced, color=Tempo.produced, group=Subject))+
geom_point()
ggplot(preferred.tempo, aes(x=Subject, y=Tempo.produced, color=Tempo.produced, group=Subject))+
geom_point()+
geom_line()
ggplot(preferred.tempo, aes(x=Subject, y=Tempo.produced, color=Tempo.produced, group=Tempo.produced))+
geom_point()+
geom_line()
?rbin
?rbinom
?dbin
?dnorm
Tempo.produced = sapply(1:n.subjects, pick.song)
Prime.tempo = c(rep(prime.song, each = n.subjects))
##parameters##
n.subjects <- 200
P <- .6 #probability
prime <- 180
##############
pick.song <- function(songs, prime.song){ #function that generates the tempo for one subject
songs <- rnorm(1,120,15) #tempo in head without prime
prime.song <- 180 #primed tempo
noise <- (prime.song - rnorm(1,prime.song,10))
decision <- runif(1,0,1)
if(decision <= P){
return(prime.song + noise)}
else{
return(songs)}
}
Subject = c(1:n.subjects)
Prime.tempo = c(rep(prime.song, each = n.subjects))
Tempo.produced = sapply(1:n.subjects, pick.song)
library(runjags)
library(runjags)
##parameters##
n.subjects <- 200
P <- .6 #probability
prime <- 180
##############
pick.song <- function(songs, prime.song){ #function that generates the tempo for one subject
songs <- rnorm(1,120,15) #tempo in head without prime
prime.song <- 180 #primed tempo
noise <- (prime.song - rnorm(1,prime.song,10))
decision <- runif(1,0,1)
if(decision <= P){
return(prime.song + noise)}
else{
return(songs)}
}
Subject = c(1:n.subjects)
Prime.tempo = c(rep(prime.song, each = n.subjects))
Tempo = sapply(1:n.subjects, pick.song)
jags.data <- list(
tempo.produced=Tempo,
subjects=n.subjects,
primed.tempo=Prime.tempo
)
result <- run.jags('Preferred Tempo Model.txt', monitor=c('p'), data=jags.data, n.chains=3, burnin=1000, sample=10000)
result <- run.jags('Preferred Tempo Model.txt', monitor=c('p'), data=jags.data, n.chains=3, burnin=1000, sample=10000)
result <- run.jags('Preferred Tempo Model.txt', monitor=c('p'), data=jags.data, n.chains=3, burnin=1000, sample=10000)
result <- run.jags('Preferred Tempo Model.txt', monitor=c('p'), data=jags.data, n.chains=3, burnin=1000, sample=10000)
result <- run.jags('Preferred Tempo Model.txt', monitor=c('p'), data=jags.data, n.chains=3, burnin=1000, sample=10000)
result <- run.jags('Preferred Tempo Model.txt', monitor=c('p'), data=jags.data, n.chains=3, burnin=1000, sample=10000)
result <- run.jags('Preferred Tempo Model.txt', monitor=c('theta'), data=jags.data, n.chains=3, burnin=1000, sample=10000)
result <- run.jags('Preferred Tempo Model.txt', monitor=c('theta'), data=jags.data, n.chains=3, burnin=1000, sample=10000)
result <- run.jags('Preferred Tempo Model.txt', monitor=c('theta'), data=jags.data, n.chains=3, burnin=1000, sample=10000)
result <- run.jags('Preferred Tempo Model.txt', monitor=c('theta'), data=jags.data, n.chains=3, burnin=1000, sample=10000)
result <- run.jags('Preferred Tempo Model.txt', monitor=c('theta'), data=jags.data, n.chains=3, burnin=1000, sample=10000)
result <- run.jags('Preferred Tempo Model.txt', monitor=c('theta'), data=jags.data, n.chains=3, burnin=1000, sample=10000)
result <- run.jags('Preferred Tempo Model.txt', monitor=c('theta'), data=jags.data, n.chains=3, burnin=1000, sample=10000)
result <- run.jags('Preferred Tempo Model.txt', monitor=c('theta'), data=jags.data, n.chains=3, burnin=1000, sample=10000)
x<-seq(-4,4,length=200)
y<-dnorm(x,mean=120, sd=15)
plot(x,y, type="l", lwd=2)
x<-seq(90,150,length=200)
y<-dnorm(x,mean=120, sd=15)
plot(x,y, type="l", lwd=2)
x<-seq(90,150,length=100)
y<-dnorm(x,mean=120, sd=15)
plot(x,y, type="l", lwd=2)
x<-seq(90,150,length=100)
y<-dnorm(x,mean=120, sd=15)
plot(x,y, type="l", lwd=2)
x<-seq(90,150,length=1000)
y<-dnorm(x,mean=120, sd=15)
plot(x,y, type="l", lwd=2)
x<-seq(90,150,length=1000)
y<-dnorm(x,mean=120, sd=15)
plot(x,y, type="l", lwd=5)
x<-seq(90,150,length=1000)
y<-dnorm(x,mean=120, sd=15)
plot(x,y, type="l", lwd=2)
x<-seq(70,170,length=1000)
y<-dnorm(x,mean=120, sd=15)
plot(x,y, type="l", lwd=2)
songs <- rnorm(1,120,15)
plot(x,y, type="l", lwd=2)
y <- rnorm(1000,120,15)
x
plot(x,y, type="l", lwd=2)
plot(x,y, type="l", lwd=2)
y <- rnorm(1,120,15)
x <-
plot(x,y, type="l", lwd=2)
##parameters##
n.subjects <- 200
P <- .6 #probability
prime <- 180
##############
pick.song <- function(songs, prime.song){ #function that generates the tempo for one subject
songs <- rnorm(1,120,15) #tempo in head without prime
prime.song <- 180 #primed tempo
noise <- (prime.song - rnorm(1,prime.song,10))
decision <- runif(1,0,1)
if(decision <= P){
return(prime.song + noise)}
else{
return(songs)}
}
Subject = c(1:n.subjects)
Prime.tempo = c(rep(prime.song, each = n.subjects))
Tempo = sapply(1:n.subjects, pick.song)
library(ggplot2)
ggplot(preferred.tempo, aes(x=Subject, y=Tempo.produced, color=Tempo.produced, group=Tempo.produced))+
geom_point()+
geom_line()
